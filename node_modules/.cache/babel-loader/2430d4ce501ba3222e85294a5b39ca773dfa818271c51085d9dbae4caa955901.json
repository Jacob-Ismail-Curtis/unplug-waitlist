{"ast":null,"code":"var _jsxFileName = \"/Users/jacobcurtis/Documents/GitHub/unplug/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoidW5wbHVnamFjb2IiLCJhIjoiY2x4eW1hNjhoMDI5ZjJpcjJ6amY4bHY4aiJ9.bEQu354oGlWyzkpYpMsPrA'; // Replace with your Mapbox token\nconst MapComponent = ({\n  selectedEvent\n}) => {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-73.935242);\n  const [lat, setLat] = useState(40.730610);\n  const [zoom, setZoom] = useState(10);\n  const [marker, setMarker] = useState(null);\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/light-v10',\n      // Use a black-and-white style\n      center: [lng, lat],\n      zoom: zoom,\n      attributionControl: false // Remove the default attribution message\n    });\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedEvent && map.current) {\n      const {\n        latitude,\n        longitude,\n        name,\n        location,\n        date,\n        time\n      } = selectedEvent;\n\n      // Fly to the selected event location and center it\n      map.current.flyTo({\n        center: [longitude, latitude],\n        zoom: 14,\n        essential: true\n      });\n\n      // Remove existing marker if any\n      if (marker) {\n        marker.remove();\n      }\n\n      // Add new marker at the event location\n      const newMarker = new mapboxgl.Marker().setLngLat([longitude, latitude]).setPopup(new mapboxgl.Popup().setHTML(`<h3>${name}</h3><p>${location}</p><p>${date} at ${time}</p>`)).addTo(map.current);\n      setMarker(newMarker);\n    }\n  }, [selectedEvent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\",\n      style: {\n        width: '100%',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"/hznVsziyUgqyqlMFMX9bgDtZww=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","jsxDEV","_jsxDEV","accessToken","MapComponent","selectedEvent","_s","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","marker","setMarker","current","Map","container","style","center","attributionControl","on","getCenter","toFixed","getZoom","latitude","longitude","name","location","date","time","flyTo","essential","remove","newMarker","Marker","setLngLat","setPopup","Popup","setHTML","addTo","children","ref","className","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jacobcurtis/Documents/GitHub/unplug/src/components/MapComponent.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nmapboxgl.accessToken = 'pk.eyJ1IjoidW5wbHVnamFjb2IiLCJhIjoiY2x4eW1hNjhoMDI5ZjJpcjJ6amY4bHY4aiJ9.bEQu354oGlWyzkpYpMsPrA'; // Replace with your Mapbox token\nconst MapComponent = ({ selectedEvent }) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(-73.935242);\n  const [lat, setLat] = useState(40.730610);\n  const [zoom, setZoom] = useState(10);\n  const [marker, setMarker] = useState(null);\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/light-v10', // Use a black-and-white style\n      center: [lng, lat],\n      zoom: zoom,\n      attributionControl: false, // Remove the default attribution message\n    });\n\n    map.current.on('move', () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  }, []);\n\n  useEffect(() => {\n    if (selectedEvent && map.current) {\n      const { latitude, longitude, name, location, date, time } = selectedEvent;\n\n      // Fly to the selected event location and center it\n      map.current.flyTo({\n        center: [longitude, latitude],\n        zoom: 14,\n        essential: true,\n      });\n\n      // Remove existing marker if any\n      if (marker) {\n        marker.remove();\n      }\n\n      // Add new marker at the event location\n      const newMarker = new mapboxgl.Marker()\n        .setLngLat([longitude, latitude])\n        .setPopup(new mapboxgl.Popup().setHTML(`<h3>${name}</h3><p>${location}</p><p>${date} at ${time}</p>`))\n        .addTo(map.current);\n\n      setMarker(newMarker);\n    }\n  }, [selectedEvent]);\n\n  return (\n    <div>\n      <div ref={mapContainer} className=\"map-container\" style={{ width: '100%', height: '400px' }} />\n    </div>\n  );\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}